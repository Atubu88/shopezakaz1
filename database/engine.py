import os
from sqlalchemy.ext.asyncio import AsyncSession, async_sessionmaker, create_async_engine

from database.models import Base
from database.orm_query import orm_add_banner_description, orm_create_categories
from common.texts_for_db import categories, description_for_info_pages

# üîë –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–µ—Ä—ë—Ç—Å—è –∏–∑ .env
# –ü—Ä–∏–º–µ—Ä –≤ .env:
# DB_URL=postgresql+asyncpg://user:password@localhost:5432/shopezakaz1

DATABASE_URL = os.getenv("DB_URL")
if not DATABASE_URL:
    raise ValueError("‚ùå DB_URL is not set in .env")

# ‚ö°Ô∏è –°–æ–∑–¥–∞—ë–º –¥–≤–∏–∂–æ–∫ PostgreSQL
engine = create_async_engine(DATABASE_URL, echo=False, future=True)

# ‚ö°Ô∏è Session factory
session_maker = async_sessionmaker(
    bind=engine,
    class_=AsyncSession,
    expire_on_commit=False,
)


async def create_db():
    """–°–æ–∑–¥–∞—ë—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –Ω–∞–ø–æ–ª–Ω—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏."""
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)

    async with session_maker() as session:
        await orm_create_categories(session, categories)
        await orm_add_banner_description(session, description_for_info_pages)


async def drop_db():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã."""
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.drop_all)
